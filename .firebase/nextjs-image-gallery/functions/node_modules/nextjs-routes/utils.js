import { existsSync, readdirSync, statSync } from "fs";
import { join } from "path";
// istanbul ignore next: io mocking not worthwhile
function findDir(dir, cwd) {
    const dirs = [dir, join("src", dir)];
    for (const d of dirs) {
        const path = join(cwd, d);
        if (existsSync(path)) {
            return path;
        }
    }
}
// istanbul ignore next: io mocking not worthwhile
export function getPagesDirectory(cwd) {
    return findDir("pages", cwd);
}
// istanbul ignore next: io mocking not worthwhile
export function getAppDirectory(cwd) {
    return findDir("app", cwd);
}
// istanbul ignore next: io mocking not worthwhile
export function findFiles(entry) {
    return readdirSync(entry).flatMap((file) => {
        const filepath = join(entry, file);
        if (statSync(filepath).isDirectory() &&
            !filepath.includes("node_modules")) {
            return findFiles(filepath);
        }
        return filepath;
    });
}
